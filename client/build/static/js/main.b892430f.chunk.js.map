{"version":3,"sources":["components/Input.js","components/List.js","components/Edit.js","components/Login.js","App.js","index.js"],"names":["Input","navigate","useNavigate","_useState","useState","fName","lName","dateOfBirth","afm","_useState2","Object","slicedToArray","userInsert","setUserInsert","_useState3","_useState4","errorMessage","setErrorMessage","onSubmitForm","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","response","returnAfm","body","wrap","_context","prev","next","preventDefault","fetch","concat","sent","json","length","method","headers","Content-Type","JSON","stringify","t0","stop","_x","apply","this","arguments","react_default","createElement","react","Dialog","open","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","id","label","type","fullWidth","variant","value","InputLabelProps","shrink","onChange","objectSpread","target","DatePicker","inputFormat","Date","date","dateStr","toLocaleDateString","renderInput","params","Container_Container","Alert","severity","DialogActions","Button","color","onClick","List","setAuth","employees","setEmployees","currentPage","setCurrentPage","_useState5","_useState6","countPages","setCountPages","_useState7","_useState8","disableNextButton","setDisableNextButton","_useState9","_useState10","disablePrevButton","setDisablePrevButton","handlerNextButton","deleteEmployee","_ref2","getEmployees","console","error","message","_ref3","_callee2","getEmpl","_context2","useEffect","logout","_ref4","_callee3","_context3","localStorage","removeItem","err","_x2","align","Stack","spacing","direction","display","size","startIcon","AddReactionOutlined_default","endIcon","DoubleArrow_default","TableContainer","component","Paper","Table","sx","minWidth","aria-label","TableHead","TableRow","TableCell","TableBody","map","employee","key","&:last-child td, &:last-child th","border","scope","firstname","lastname","dateofbirth","Edit_default","confirmAlert","title","buttons","HighlightOff_default","Typography","disabled","style","backgroundColor","prevCurrentPage","NavigateBefore_default","NavigateNext_default","Edit","useParams","userUpdate","setUserUpdate","onSubmitFormUpadate","returnEmployee","loadEmp","res","data","getFormattedDate","Login","email","password","inputs","setInputs","parseRes","Content-type","log","jwtToken","setItem","maxWidth","CssBaseline","Box","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","Typography_Typography","onSubmit","noValidate","mt","TextField_TextField","required","name","autoComplete","mb","Grid","App","isAuthenticated","setIsAuthenticated","checkAuthenticated","jwt_token","token","boolean","LocalizationProvider","dateAdapter","AdapterDateFns","react_router_dom","Container","fixed","react_router","path","element","to","components_Login","components_List","components_Input","components_Edit","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b892430f.chunk.js","sourcesContent":["/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport React, {Fragment, useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Alert from '@mui/material/Alert';\r\nimport { Container, experimental_sx } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { DatePicker } from \"@mui/lab\";\r\n\r\n\r\nconst Input = () =>{\r\n  //navigate//\r\n  const navigate = useNavigate();\r\n  \r\n  //useStates//\r\n  const [userInsert, setUserInsert] = useState({\r\n    fName: null,\r\n    lName: null,\r\n    dateOfBirth: null,\r\n    afm: null\r\n  })\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n  const onSubmitForm = async e => {\r\n    e.preventDefault();\r\n    try{\r\n      const response = await fetch(`/employee?afm=${userInsert.afm}`);\r\n      const returnAfm = await response.json();\r\n\r\n      if (userInsert.afm === null) {\r\n        setErrorMessage(\"To πεδίο ΑΦΜ δεν μπορει να ειναι κενό!\");\r\n      }else if (userInsert.afm.length < 9 || userInsert.afm.length > 9) {\r\n        setErrorMessage(\"To πεδίο ΑΦΜ πρέπει να περιέχει 9 ψηφία!\");\r\n      }else if (returnAfm.afm != userInsert.afm) {\r\n        const body = userInsert;\r\n        await fetch(\"/employee\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        });\r\n        navigate(\"/\");\r\n      }else{\r\n        setErrorMessage(\"Το Α.Φ.Μ. υπάρχει ήδη!\");\r\n      }\r\n    }catch (err) {\r\n      setErrorMessage(\"Κάτι πήγε στραβά!\");\r\n    }\r\n  };\r\n\r\n  const getFormattedDate = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleDateString(\"en-CA\");\r\n  };\r\n  \r\n  return <Fragment>\r\n    <Dialog open>\r\n      <DialogTitle>ΕΓΓΡΑΦΗ</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>ΕΙΣΑΓΕΤΕ ΤΑ ΣΤΟΙΧΕΙΑ.</DialogContentText>\r\n        <TextField\r\n        autoFocus\r\n        margin=\"dense\"\r\n        id=\"fName\"\r\n        label=\"ONOMA\"\r\n        type=\"text\"\r\n        fullWidth\r\n        variant=\"standard\"\r\n        value={userInsert.fName}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={e => setUserInsert({\r\n          ...userInsert,\r\n          fName: e.target.value\r\n        })}\r\n        />\r\n        <TextField\r\n        margin=\"dense\"\r\n        id=\"lName\"\r\n        label=\"ΕΠΩΝΥΜΟ\"\r\n        type=\"text\"\r\n        fullWidth\r\n        variant=\"standard\"\r\n        value={userInsert.lName}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={e => setUserInsert({\r\n          ...userInsert,\r\n          lName: e.target.value\r\n        })}\r\n        />\r\n        <DatePicker\r\n        inputFormat=\"dd/MM/yyyy\"\r\n        label=\"ΗΜΕΡΟΜΗΝΙΑ ΓΕΝΝΗΣΗΣ\"\r\n        value={new Date(userInsert.dateOfBirth)}\r\n        onChange={(date) => {\r\n          setUserInsert({\r\n            ...userInsert,\r\n            dateOfBirth: getFormattedDate(date),\r\n            });\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        <TextField\r\n        margin=\"dense\"\r\n        id=\"afm\"\r\n        label=\"Α.Φ.Μ.\"\r\n        type=\"text\"\r\n        fullWidth\r\n        variant=\"standard\"\r\n        value={userInsert.afm}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={e => setUserInsert({\r\n          ...userInsert,\r\n          afm: e.target.value\r\n        })}\r\n        />\r\n        </DialogContent>\r\n        <Container>\r\n          { errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n        </Container>\r\n        <DialogActions>\r\n          <Button color=\"error\" onClick={() => navigate('/')}>ΠΙΣΩ</Button>\r\n          <Button color=\"success\" onClick={onSubmitForm}>ΕΓΓΡΑΦΗ</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n};\r\n\r\nexport default Input;","/* eslint-disable eqeqeq */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, {Fragment, useEffect, useState} from \"react\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport AddReactionOutlinedIcon from '@mui/icons-material/AddReactionOutlined';\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nfunction List({setAuth}) {\r\n    //navigate//\r\n    const navigate = useNavigate();\r\n\r\n    //useState//\r\n    const [employees, setEmployees] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [countPages, setCountPages] = useState();\r\n    const [disableNextButton, setDisableNextButton] = useState(false);\r\n    const [disablePrevButton, setDisablePrevButton] = useState(false);\r\n\r\n\r\n\r\n    //handler next page//\r\n    const handlerNextPage = () => {\r\n        if(currentPage < countPages){\r\n            setCurrentPage(prevCurrentPage => prevCurrentPage + 1);\r\n        }\r\n    };\r\n    \r\n    //handler next button//\r\n    const handlerNextButton = () => {\r\n        if(currentPage >= countPages){\r\n            setDisableNextButton(true);\r\n        }else{\r\n            setDisableNextButton(false);\r\n        }\r\n    };\r\n\r\n    //handler prev page//\r\n    const handlerPrevPage = () => {\r\n        if(currentPage>1){\r\n            setCurrentPage(prevCurrentPage => prevCurrentPage - 1);\r\n        }\r\n    };\r\n\r\n    //handler prev button//\r\n    const handlerPrevButton = () => {\r\n        if(currentPage == 1){\r\n            setDisablePrevButton(true);\r\n        }else{\r\n            setDisablePrevButton(false);\r\n        }\r\n    };\r\n    \r\n    //Delete confirmation alert//\r\n    const popupAlert = (id) => {\r\n        confirmAlert({\r\n          title: 'Διαγραφή χρήστη',\r\n          message: 'Είστε σίγουρος/η για την διαγραφή;',\r\n          buttons: [\r\n            {\r\n              label: 'Ακύρωση',\r\n              onClick: navigate('/')\r\n            },\r\n            {\r\n                label: 'Ναι',\r\n                onClick: () => deleteEmployee(id)\r\n            }\r\n          ]\r\n        });\r\n      };\r\n\r\n    //Delete//\r\n    const deleteEmployee = async (id) => {\r\n        try{\r\n            const deleteEmpl = await fetch(`/employee/${id}`, {\r\n                method: \"DELETE\"\r\n            }); \r\n            getEmployees();\r\n            navigate('/');\r\n        } catch(err){\r\n            console.error(err.message)\r\n        }\r\n    }\r\n    \r\n    //get employees//\r\n    const getEmployees = async () => {\r\n        try {\r\n            const response = await fetch(`/employee?page=${currentPage}`);\r\n            const getEmpl = await response.json();\r\n\r\n            setEmployees(getEmpl.employees);\r\n            setCountPages(getEmpl.countPages);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    //useEffect//\r\n    useEffect(() => {\r\n        getEmployees();\r\n        handlerNextButton();\r\n    }, [currentPage]);\r\n\r\n\r\n    //useEffect//\r\n    useEffect(() => {\r\n        handlerNextButton();\r\n        handlerPrevButton();\r\n    }, [employees]);\r\n\r\n    const logout = async e => {\r\n        e.preventDefault();\r\n        try {\r\n          localStorage.removeItem(\"token\");\r\n          setAuth(false);\r\n        } catch (err) {\r\n          console.error(err.message);\r\n        }\r\n      };\r\n\r\n    //format date //\r\n    const getFormattedDate = (dateStr) => {\r\n        const date = new Date(dateStr);\r\n        return date.toLocaleDateString('en-GB');\r\n    }\r\n    \r\n    return <Fragment>\r\n        <p align=\"left\">https://github.com/GiorgosMar/CRUD</p>\r\n        <h1 align=\"center\">ΛΙΣΤΑ</h1>\r\n\r\n        <Stack spacing={2} direction=\"column\">\r\n        <Stack spacing={113} display=\"flex\" direction=\"row\">\r\n            <Button\r\n            variant=\"outlined\" \r\n            color=\"success\"\r\n            size='large' \r\n            onClick={() => navigate('/insert')} \r\n            startIcon={<AddReactionOutlinedIcon />} \r\n            endIcon={<DoubleArrowIcon/>}>ΠΡΟΣΘΗΚΗ\r\n            </Button>\r\n            <Button \r\n            onClick={e => logout(e)}\r\n            variant=\"outlined\" \r\n            color=\"error\"\r\n            size='large' \r\n            >Αποσύνδεση\r\n            </Button>\r\n        </Stack>\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650}} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ΟΝΟΜΑ</TableCell>\r\n                        <TableCell align=\"center\">ΕΠΩΝΥΜΟ</TableCell>\r\n                        <TableCell align=\"center\">ΗΜΕΡΟΜΗΝΙΑ ΓΕΝΝΗΣΗΣ</TableCell>\r\n                        <TableCell align=\"center\">Α.Φ.Μ.</TableCell>\r\n                        <TableCell align=\"center\">ΕΝΗΜΕΡΩΣΗ</TableCell>\r\n                        <TableCell align=\"center\" >ΔΙΑΓΡΑΦΗ</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {employees.map((employee) => (\r\n                        <TableRow\r\n                            key={employee.id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {employee.firstname}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">{employee.lastname}</TableCell>\r\n                            <TableCell align=\"center\">{getFormattedDate(employee.dateofbirth)}</TableCell>\r\n                            <TableCell align=\"center\">{employee.afm}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Button\r\n                                 variant=\"outlined\" \r\n                                 color=\"warning\" \r\n                                 onClick={() => navigate(`/${employee.id}/update`)} \r\n                                 endIcon={<EditIcon/>}>Ενημέρωση</Button>\r\n                                 </TableCell>\r\n                            <TableCell \r\n                            align=\"center\" >\r\n                                <Button \r\n                                variant=\"outlined\" \r\n                                color=\"error\" \r\n                                onClick={() => popupAlert(employee.id)}\r\n                                endIcon={<HighlightOffIcon/>}>ΔΙΑΓΡΑΦΗ</Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            <Typography align=\"right\">\r\n                <span>Σελίδα {currentPage}η</span>\r\n                <Button\r\n                disabled={disablePrevButton}\r\n                variant=\"raised\"\r\n                style={{ backgroundColor: 'transparent'}}\r\n                onClick={() => handlerPrevPage()}\r\n                ><NavigateBeforeIcon/></Button>\r\n                <Button\r\n                disabled={disableNextButton}\r\n                variant=\"raised\"\r\n                style={{ backgroundColor: 'transparent'}}\r\n                onClick={() => handlerNextPage()}\r\n                ><NavigateNextIcon/></Button>\r\n            </Typography>\r\n        </TableContainer>\r\n        </Stack>\r\n    </Fragment>;\r\n}\r\n\r\nexport default List;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport React, {Fragment, useState, useEffect} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Alert from '@mui/material/Alert';\r\nimport { Container } from \"@mui/material\";\r\nimport { useNavigate, useParams  } from \"react-router-dom\";\r\nimport { DatePicker } from \"@mui/lab\";\r\n\r\n\r\nconst Edit = () =>{\r\n  //navigate//\r\n  const navigate =  useNavigate();\r\n  \r\n  //useParams//\r\n  const params = useParams();\r\n  \r\n  //useStates//\r\n  const [userUpdate, setUserUpdate] = useState({\r\n    fName: null,\r\n    lName: null,\r\n    dateOfBirth: null,\r\n    afm: null\r\n  })\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n  //Update Employee//\r\n  const onSubmitFormUpadate = async e => { \r\n    e.preventDefault();\r\n    try{\r\n      const response = await fetch(`/employee/?afm=${userUpdate.afm}`);\r\n      const returnEmployee = await response.json();\r\n\r\n      if (userUpdate.afm.length === 0) {\r\n        setErrorMessage(\"To πεδίο ΑΦΜ δεν μπορει να ειναι κενό!\");\r\n      }else if (userUpdate.afm.length < 9 || userUpdate.afm.length > 9) {\r\n        setErrorMessage(\"To πεδίο ΑΦΜ πρέπει να περιέχει 9 ψηφία!\");\r\n      }else if (returnEmployee.afm !== userUpdate.afm || returnEmployee.id == params.id) {\r\n        await fetch(`/employee/${params.id}`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(userUpdate),\r\n        });\r\n        navigate(\"/\");\r\n      }else{\r\n        setErrorMessage(\"Το Α.Φ.Μ. υπάρχει ήδη!\");\r\n      }\r\n    }catch (err) {\r\n      setErrorMessage('Κάτι πήγε στραβά');\r\n      }\r\n  };\r\n  \r\n  //Load Employee//\r\n  const loadEmp = async (id) => {\r\n    const res = await fetch(`/employee/${params.id}`);\r\n    const data = await res.json();\r\n    setUserUpdate({ \r\n      fName: data.firstname, \r\n      lName: data.lastname,\r\n      dateOfBirth: getFormattedDate(data.dateofbirth),\r\n      afm: data.afm });\r\n  };\r\n\r\n  //useEffect//\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      loadEmp(params.id);\r\n    }\r\n  }, [params.id]);\r\n  \r\n   //Format Date//\r\n  const getFormattedDate = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleDateString('en-CA');\r\n  }\r\n  \r\n  return <Fragment>\r\n        <Dialog open>\r\n          <DialogTitle>ΕΝΗΜΕΡΩΣΗ</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              ΕΙΣΑΓΕΤΕ ΤΑ  ΣΤΟΙΧΕΙΑ.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"fName\"\r\n            label=\"ONOMA\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={userUpdate.fName}\r\n            onChange={e => setUserUpdate({\r\n              ...userUpdate,\r\n              fName: e.target.value\r\n            })}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"lName\"\r\n            label=\"ΕΠΩΝΥΜΟ\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={ userUpdate.lName }\r\n            onChange={e => setUserUpdate({\r\n              ...userUpdate,\r\n              lName: e.target.value\r\n            })}\r\n          />\r\n             <DatePicker\r\n            inputFormat=\"dd/MM/yyyy\"\r\n            label=\"ΗΜΕΡΟΜΗΝΙΑ ΓΕΝΝΗΣΗΣ\"\r\n            value={new Date(userUpdate.dateOfBirth)}\r\n            onChange={(date) => {\r\n              setUserUpdate({\r\n                ...userUpdate,\r\n                dateOfBirth: getFormattedDate(date),\r\n              });\r\n            }}\r\n            renderInput={(params) => <TextField {...params} />}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"afm\"\r\n            label=\"Α.Φ.Μ.\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={userUpdate.afm}\r\n            onChange={e => setUserUpdate({\r\n              ...userUpdate,\r\n              afm: e.target.value\r\n            })}\r\n          />\r\n        </DialogContent>\r\n        <Container>{ errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}</Container>\r\n        <DialogActions>\r\n          <Button color=\"error\" onClick={()=>navigate('/')}>ΠΙΣΩ</Button>\r\n          <Button color=\"success\" onClick={onSubmitFormUpadate}>Ενημέρωση</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n}\r\n\r\nexport default Edit;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nconst Login = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n  const { email, password } = inputs;\r\n\r\n  const onChangeEmail = e =>\r\n    setInputs({ ...inputs, email: e.target.value });\r\n    \r\n  const onChangePassword = e =>\r\n    setInputs({ ...inputs, password: e.target.value });\r\n\r\n    const onSubmitForm = async e => {\r\n      e.preventDefault();\r\n      try {\r\n        const body = { email, password };\r\n        const response = await fetch(`/authentication/login`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          }\r\n        );\r\n  \r\n        const parseRes = await response.json();\r\n        console.log(parseRes);\r\n\r\n       if(parseRes === \"Λάθος στοιχεία!\"){\r\n         setErrorMessage(\"Λάθος στοιχεία!\")\r\n       }else if(parseRes === \"Συμπληρώστε τα πεδία\"){\r\n        setErrorMessage(\"Συμπληρώστε τα πεδία!\")\r\n      }else if(parseRes === \"Λάθος Email\"){\r\n        setErrorMessage(\"Λάθος Email!\")\r\n      }else if (parseRes.jwtToken) {\r\n        localStorage.setItem(\"Token\", parseRes.jwtToken);\r\n        setAuth(true);\r\n      } else {\r\n        setAuth(false);\r\n      }\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n    <Fragment>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={onSubmitForm} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              value={inputs.email}\r\n              onChange={(e) =>\r\n                setInputs({\r\n                  ...inputs,\r\n                  email: e.target.value,\r\n                })\r\n              }\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={inputs.password}\r\n              onChange={(e) =>\r\n                setInputs({\r\n                  ...inputs,\r\n                  password: e.target.value,\r\n                })\r\n              }\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >Σύνδεση\r\n            </Button>\r\n            <Grid>\r\n              { errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>} \r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </Fragment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;","/* eslint-disable no-const-assign */\r\n/* eslint-disable no-unused-vars */\r\nimport { Container } from \"@material-ui/core\";\r\nimport React,{ Fragment, useState, useEffect } from \"react\";\r\nimport {BrowserRouter as Router, Routes, Route, Navigate, Outlet} from 'react-router-dom';\r\nimport './App.css';\r\nimport { LocalizationProvider } from \"@mui/lab\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\n\r\n\r\n//components\r\nimport Input from \"./components/Input\";\r\nimport List from \"./components/List\";\r\nimport Edit from \"./components/Edit\";\r\nimport Login from \"./components/Login\";\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const checkAuthenticated = async () => {\r\n        try {\r\n          const res = await fetch(\"/authentication/verify\", {\r\n            method: \"POST\",\r\n            headers: { jwt_token: localStorage.token }\r\n          });\r\n    \r\n          const parseRes = await res.json();\r\n    \r\n          parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\r\n        } catch (err) {\r\n          console.error(err.message);\r\n        }\r\n      };\r\n    \r\n      useEffect(() => {\r\n        checkAuthenticated();\r\n      }, []);\r\n    \r\n      const setAuth = boolean => {\r\n        setIsAuthenticated(boolean);\r\n      };\r\n\r\n  return (\r\n  <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n  <Router>\r\n     <Fragment>\r\n        <Container fixed>\r\n          <Routes>\r\n          <Route path=\"/login\" element={!isAuthenticated ? <Login setAuth={setAuth}/> : <Navigate to=\"/\"/>} />\r\n          <Route path=\"/\" element={isAuthenticated ? <List setAuth={setAuth}/> : <Navigate to=\"/login\"/>} />\r\n          <Route path=\"/insert\" element={isAuthenticated ? <Input/> : <Navigate to=\"/login\"/> }/>\r\n          <Route path=\"/:id/update\" element={isAuthenticated ? <Edit/> : <Navigate to=\"/login\"/>} />\r\n          </Routes>\r\n         </Container>\r\n      </Fragment>\r\n  </Router>\r\n</LocalizationProvider>\r\n);}\r\n\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}